<?xml version="1.0"?>
<launch>
  <!-- Arguments -->
  <arg name="output_dir" default="$(find dual_camera_simulation)/data"/>
  <arg name="bag_name" default="point_cloud_recording"/>
  <arg name="record_camera1" default="true"/>
  <arg name="record_camera2" default="true"/>
  <arg name="record_merged" default="true"/>
  <arg name="record_tf" default="true"/>
  <arg name="duration" default="60"/>  <!-- Duration in seconds, 0 means record indefinitely -->

  <!-- Create the output directory if it doesn't exist -->
  <node pkg="dual_camera_simulation" type="create_dir.sh" name="create_dir" 
        args="$(arg output_dir)" output="screen"/>

  <!-- Record the point cloud data -->
  <node pkg="rosbag" type="record" name="rosbag_record_pointcloud" output="screen"
        args="record -O $(arg output_dir)/$(arg bag_name)
              $(eval '-a' if not (arg('record_camera1') or arg('record_camera2') or arg('record_merged')) else '')
              $(eval '/camera1/depth/filtered_points' if arg('record_camera1') else '')
              $(eval '/camera2/depth/filtered_points' if arg('record_camera2') else '')
              $(eval '/merged_point_cloud' if arg('record_merged') else '')
              $(eval '/tf' if arg('record_tf') else '')
              --duration=$(arg duration)">
  </node>

  <!-- Display statistics during recording -->
  <node pkg="dual_camera_simulation" type="evaluate_pointcloud.py" name="pointcloud_evaluator" output="screen"
        args="--topic /merged_point_cloud" if="$(arg record_merged)">
  </node>
</launch>